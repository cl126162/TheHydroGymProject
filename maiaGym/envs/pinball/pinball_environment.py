import warnings
from maiaGym.maia_env_core import MaiaFlowEnv
import numpy as np
from einops import rearrange
import gym

class PinballBase(MaiaFlowEnv):
    def __init__(self, env_config):
        super().__init__(env_config)            
        
        # set default values if necessary
        self.generate_general_defaults()
    
    def get_reward(self):
        forces = []
        for id in range(len(self.bcId)):
            forces.append(self.maiaInterface.getForce(self.bcId[id]))
        
        forces = np.stack(forces)

        # compute lift and drag coefficients
        nonDim_coefficients = self.compute_nondim_coefficients(forces=forces,
                                                                density=1.0, 
                                                                referenceVelocity=self.Ma/np.sqrt(3), 
                                                                projectionLength=self.referenceLength/self.dX)
        obj_dict = {
            'forces': nonDim_coefficients,
        }

        return -np.abs(nonDim_coefficients[:,0].sum()) - self.omega * np.abs(nonDim_coefficients[:,0].sum()), obj_dict
    
    def generate_general_defaults(self):
        """Set default values based on Re and nDim"""
        
        # Re number for default environment configuration, if simulated Re number 
        # differs from default values in dict AND no other environment parameters are given
        self.Re_default = 100
        
        self.default_values = {
            (30, 2): {  # Defaults for Re=30, nDim=2
                'num_substeps_per_iteration': 230,
                'xMin': 2.0,
                'xMax': 12.0,
                'nXProbes': 6,
                'yMin': -1.8,
                'yMax': 1.8,
                'nYProbes': 7,
                'observation_type': ['u', 'v'],
                'max_episode_steps': 200,
            },
            (75, 2): {  # Defaults for Re=75, nDim=2
                'num_substeps_per_iteration': 190,
                'xMin': 3.0,
                'xMax': 12.0,
                'nXProbes': 7,
                'yMin': -1.5,
                'yMax': 1.5,
                'nYProbes': 7,
                'observation_type': ['u', 'v'],
                'max_episode_steps': 200,
            },
            (100, 2): {  # Defaults for Re=100, nDim=2
                'num_substeps_per_iteration': 170,
                'xMin': 1.5,
                'xMax': 7.5,
                'nXProbes': 7,
                'yMin': -1.5,
                'yMax': 1.5,
                'nYProbes': 7,
                'observation_type': ['u', 'v'],
                'max_episode_steps': 200,
            },
            (150, 2): {  # Defaults for Re=150, nDim=2
                'num_substeps_per_iteration': 100,
                'xMin': 1.25,
                'xMax': 7.25,
                'nXProbes': 7,
                'yMin': -1.2,
                'yMax': 1.2,
                'nYProbes': 7,
                'observation_type': ['u', 'v'],
                'max_episode_steps': 200,
            }
        }
        

class Pinball(PinballBase):
    def __init__(self, env_config):
        super().__init__(env_config)
        
        # Pinball default values
        self.environment_default_values = {
            (30, 2): {  # Defaults for Re=30, nDim=2
                'num_inputs': 3,
                'MAX_CONTROL': 0.5,
                'obs_loc': np.array([0.0460976857516334, 0.043663866516576215, 0.04316889556113493, 0.04423722426137603, 0.04594830191978008, 0.047457085832909064, 0.018594964143611746, 0.023525912728205648, 0.02839678277292945, 0.033947614369164866, 0.0386498396494265, 0.042043386993708604, 0.00172305451797847, 0.007983878719831984, 0.01727620616546925, 0.02627038143848561, 0.033254250276571945, 0.03809819235234106, -0.0032381211111081163, 0.002694704231594933, 0.013698061423584141, 0.02360902695785506, 0.031253475604945014, 0.03663031666631397, 0.0015167817814765116, 0.008455151524029498, 0.01829745355295948, 0.026495691478763534, 0.03296362456446366, 0.03783011730570941, 0.017868584928626884, 0.024099964150679096, 0.02977963715010364, 0.0343957536567722, 0.03839516782712889, 0.04174941918967378, 0.04577914130184144, 0.04428687586631123, 0.04428957582151083, 0.04502662897853285, 0.046190054931511924, 0.04757574342320454, 0.002892016580245945, 0.005978445888414894, 0.006303974749277999, 0.005195357714190008, 0.003964826739311704, 0.003109769922530367, 0.0020809517651996156, 0.0055385087903161824, 0.005418109770209746, 0.0041478590387123, 0.003106802733374707, 0.0024551283309673616, 0.00035481839401580904, 0.00353462176197164, 0.0031133293626593108, 0.0020829211425277944, 0.001602246430826004, 0.001375961177564982, 0.0004228957115801168, 0.0008865039568896933, 0.0002104801742208422, -0.00030326358664464976, -0.0001216956723702576, 0.00014841390729661722, 0.0006210188424119042, -0.002167653918457983, -0.002917553637818383, -0.0027608475443450923, -0.001983384468191077, -0.0012074096606463074, -0.00119809338446999, -0.004626650059113894, -0.005116010575646509, -0.004511004388523544, -0.0034185225015088286, -0.0023239494687842515, -0.002228298097304222, -0.0054494903089272306, -0.005960707071701501, -0.005293823810405133, -0.004176267159663518, -0.0030074065937816456]),
                'obs_scale': np.array([0.01581754026777341, 0.01650497036041473, 0.01651385865147176, 0.01506830667680521, 0.013073836217502218, 0.01152280405281149, 0.014708927719772261, 0.017231557302864683, 0.01666958782487692, 0.01492427981298199, 0.012996476265196372, 0.011533765519138392, 0.010714173571055544, 0.015087104275267162, 0.015503453052327072, 0.01452301129738596, 0.013190243960889685, 0.011977946113354234, 0.008571157213893888, 0.013647636795462074, 0.015224919409743807, 0.01489813750645785, 0.013829766790460902, 0.012669855318777514, 0.010223843002309458, 0.014774535260348371, 0.01607525385241459, 0.015521432301652033, 0.014352159053676919, 0.013184939705824565, 0.013797127970082465, 0.016865984000418173, 0.016527011149447865, 0.015302322903121428, 0.014064112717052409, 0.013006418935125394, 0.015533561683430218, 0.016192148898435184, 0.015393750929940745, 0.014155618993407998, 0.013082960439283649, 0.012170389221550663, 0.01753950098154474, 0.017210857725596277, 0.017792605844706967, 0.01867728760689692, 0.019132110616495054, 0.019214151024576253, 0.018878285456985434, 0.01967204110363094, 0.020634184171221995, 0.02126673124954527, 0.021176772623245556, 0.02088076633129159, 0.01778389686066436, 0.02124445365886135, 0.02265505280391812, 0.02293953858594371, 0.0224812159821286, 0.02195299334889777, 0.017011823212130343, 0.021810279992265466, 0.023388446600961576, 0.02339502281978885, 0.022880456531150256, 0.022335462949882208, 0.017461601831842578, 0.021473229807529373, 0.022824189480072834, 0.022707602680565632, 0.022391761862397854, 0.022029586937990963, 0.018849789987924907, 0.020180478330515273, 0.021064925112342352, 0.02103608018732338, 0.02103061961505787, 0.020951129430965713, 0.0175401087769396, 0.017955109115349484, 0.018550312526600877, 0.018710027188595945, 0.018979084139616905, 0.01917253380446599]),
            },
            (75, 2): {  # Defaults for Re=75, nDim=2
                'num_inputs': 3,
                'MAX_CONTROL': 0.5,
                'obs_loc': np.array([0.039671623645004886, 0.039814039911923185, 0.04066757135734493, 0.04203664868073028, 0.0435264980967194, 0.04461602946982678, 0.04533164614892562, 0.019639150446628367, 0.024906737803198846, 0.029951699038010947, 0.03482522207460751, 0.03806891421034264, 0.040267624825651, 0.04195084459341994, 0.0058886756683785525, 0.014071509409419593, 0.022022813776395048, 0.029252047344724343, 0.034095823928108476, 0.037304950180258936, 0.03979236200274907, 0.0004872600242311462, 0.00996779489658201, 0.01947101124221056, 0.026919122593034646, 0.032599874375115884, 0.0366300439341414, 0.03956434451507281, 0.0039616413541981345, 0.01277168891144222, 0.02170039045044705, 0.02851217691654594, 0.03404445811044124, 0.038176112340807485, 0.04101373963158722, 0.016889917240587356, 0.023071053173285425, 0.029180179520487876, 0.03446485820162523, 0.03888077949998514, 0.04196402386918181, 0.04418821192114102, 0.03664400967598921, 0.03811286958471342, 0.0402598250358902, 0.04297972161982917, 0.04548598762422519, 0.047077726605225224, 0.048401811470372064, 0.00665225593920938, 0.007374804620023031, 0.00697203737800447, 0.005530232906095163, 0.003863442758367007, 0.0027893785695495103, 0.0021856410850946218, 0.005552542313362149, 0.006494822152522022, 0.005879609090483515, 0.004583196496058082, 0.003207137146134782, 0.002316827404395354, 0.0018206239934407007, 0.002975700855711762, 0.004314689352799555, 0.0036545331913980647, 0.0028392149244912267, 0.00215204111061582, 0.0015097840323908597, 0.001196081229159095, 0.0003591902505147784, 0.0012169428972384115, 0.0008632698111935282, 0.0007019489741356926, 0.000705924952608144, 0.0004374462359916959, 0.00040775445451627686, -0.001589036148653579, -0.0018416457621943637, -0.0016663669032382074, -0.001203318789987256, -0.0007884148535472169, -0.000634174503499856, -0.0003394401113511954, -0.003744697154450822, -0.004607879264196513, -0.0040311837894580795, -0.0030503012130623673, -0.0022681384097334796, -0.0016695689165820498, -0.001070711982462038, -0.005109412639188866, -0.005978948007608653, -0.005451867271601509, -0.004354777195102131, -0.0032265965143864063, -0.002335702847954351, -0.001625004824018775]),
                'obs_scale': np.array([0.02216087879205014, 0.021968715854406178, 0.021385734481272612, 0.01900384767557739, 0.016941909739346412, 0.016184822239306385, 0.01582832922174642, 0.02243698073504518, 0.02359145051259662, 0.022466156926204173, 0.019703969212125735, 0.017542608895704383, 0.01670528565318212, 0.016091549465829802, 0.01940341513448502, 0.022050430235307204, 0.022067131187987817, 0.01987375445928189, 0.018159544083405185, 0.017015137115122043, 0.01643558981013357, 0.017041110949990893, 0.01995431714712961, 0.021245442121923624, 0.020213135149161857, 0.018870911450311178, 0.017891150639869464, 0.017492818615087162, 0.018344175958320528, 0.020543049719018276, 0.020470680332636465, 0.020192468293894955, 0.01900296651867655, 0.018201716571214735, 0.017960883012436382, 0.021670193408137348, 0.021614241180502775, 0.02018866231008417, 0.018997125579872817, 0.017966321950970986, 0.017525898777793283, 0.017277875282733234, 0.022874013574613765, 0.021410725664148172, 0.01963192122486499, 0.01784325622203724, 0.01660676099252169, 0.016117714532863495, 0.01587664120487978, 0.02477138205023962, 0.024127630000506793, 0.024036270169278253, 0.02417185986536411, 0.023589839823842898, 0.02284173078353457, 0.02218662107347557, 0.025088969471762507, 0.025828784339887, 0.025932411284940837, 0.02601935082297873, 0.024998070339053068, 0.023953184848483886, 0.02313906557850521, 0.024584301879742084, 0.02693158734105412, 0.027289075794651348, 0.02722797870438383, 0.026105668904861386, 0.024844522576752025, 0.023886155405979957, 0.024720218027184736, 0.027854069769290106, 0.028272601726525702, 0.028036752937011196, 0.026958387638280578, 0.025508736130255644, 0.024321430595861223, 0.025303199565913904, 0.028072463852486833, 0.028566884054758872, 0.02844327515375372, 0.02742682752730677, 0.02585034606949174, 0.02445906244819284, 0.026000344287091956, 0.027455006096025615, 0.028023766783903694, 0.028144171582410664, 0.027346489590326015, 0.025773924620063376, 0.0243451737086522, 0.02532713551378685, 0.025749874807711116, 0.026331122311353476, 0.02664277066179057, 0.026273499858053922, 0.025081694846803816, 0.023859161765755796]),
            },
            (100, 2): {  # Defaults for Re=100, nDim=2
                'num_inputs': 3,
                'MAX_CONTROL': 0.5,
                'obs_loc': np.array([0.039508440382841445, 0.039653147857723496, 0.03954787944773252, 0.03945021367743691, 0.040177836499107444, 0.04122030515285824, 0.0420896694361531, 0.012357644017950427, 0.017707645269185585, 0.022008604902066117, 0.02590298313458747, 0.029490965435307895, 0.03274105971847969, 0.03535669269904317, 0.0010276813656504616, 0.0040622980797226415, 0.009381431716326596, 0.016364857657552776, 0.022568362827520113, 0.02744567039131079, 0.03151789413599353, -0.0009336642234936064, -0.0005510736626730241, 0.005172169685799501, 0.01246385086225466, 0.020115348293480263, 0.025885846734307456, 0.03063121859618857, 0.0018763200541176016, 0.0038216362864293414, 0.008789451956752277, 0.015622014155470376, 0.022725794918949833, 0.02845905611081629, 0.03314066556804105, 0.01142620763245921, 0.017426436929627212, 0.022021629804078985, 0.025958825805788444, 0.030389572217723277, 0.03467772237195466, 0.03846343632413157, 0.03795901123645942, 0.038249302069695096, 0.03949623579332827, 0.03987553151375623, 0.04065801353978308, 0.04225585504000022, 0.044337844187059945, 0.0026213970481898034, 0.005928038934263653, 0.0071751807761072685, 0.007516256378488838, 0.006923694981386685, 0.006072251385521653, 0.005289410846448562, 0.00013130146414186528, 0.004589417106237285, 0.0060749015436962015, 0.006528298731413669, 0.00577861847016598, 0.005082476810579679, 0.004532690382153947, -0.001447012275128778, 0.002440816031480889, 0.003207543060360572, 0.003890808398361288, 0.0034868950241218042, 0.003166317155887633, 0.003143944303350022, 0.00010553676556541312, 0.00035551498628506216, -0.0003136947424419448, 0.00022556777288699795, 0.0003392705467732808, 0.0007518393219350212, 0.001156724163796772, 0.001603297188874182, -0.0014296587238783478, -0.0030347213255610085, -0.003397891939622817, -0.0027196202836126723, -0.0015292156238845029, -0.0009141537026275651, -0.0002986279893398159, -0.0038428800678569947, -0.005473320286254934, -0.0065359040724026094, -0.00549137106695176, -0.0038523623802805096, -0.0029665429946914646, -0.0030735828170932004, -0.005681169611706464, -0.006841198763873505, -0.007611816129007566, -0.006921943217342088, -0.005410390646409717, -0.004382083152860648]),
                'obs_scale': np.array([0.021981448833157, 0.022926996706124008, 0.023589060422161783, 0.02210535497221942, 0.0205069810656129, 0.01901430210802771, 0.01742676690642354, 0.018810179893918012, 0.023143642684506693, 0.024566371554539296, 0.024568842704352268, 0.02238042874715976, 0.020480746832596933, 0.019129758810138456, 0.013509587125303523, 0.01913216127128757, 0.0228863325620636, 0.023909107608636456, 0.023010592604247596, 0.021313584879019173, 0.019993303378289164, 0.011315943904595569, 0.01594886056798081, 0.020347925961704153, 0.02261836013789111, 0.022418264782295583, 0.02151302531520214, 0.019969208558771934, 0.012081040867350124, 0.017524631826920833, 0.020742806795701535, 0.02206406669993766, 0.021954193326597628, 0.020941660727813723, 0.02019452154812186, 0.01730940960217314, 0.021658743324480048, 0.022869798734049887, 0.023626678123862366, 0.022776948930121613, 0.02181518666619796, 0.020802373541247702, 0.023348564768192637, 0.024756705269676053, 0.02453851549942897, 0.024312723456308135, 0.02384853335625293, 0.022738158447282525, 0.021031904196469293, 0.02934022848579761, 0.02749207300262364, 0.027290813555245336, 0.02736262658511198, 0.027553113278753674, 0.0278313769282632, 0.02774521659366949, 0.027204614259326756, 0.027307050626585172, 0.028440481528719707, 0.029274879851077136, 0.02932547935865786, 0.029234559910275983, 0.029002088044936328, 0.021696157470249784, 0.02529068904905077, 0.028763882463951423, 0.030445100068522413, 0.0307292859079712, 0.030147437518754597, 0.029755737484653502, 0.01938462873461603, 0.023948330917146373, 0.028673886373715894, 0.03052992515530465, 0.031463035232936025, 0.03076811996372043, 0.03005492890828467, 0.019648434752257048, 0.023744420834575664, 0.027689319865837263, 0.029643966391936245, 0.030914632327702495, 0.030428563520064976, 0.029607740714831545, 0.023754726683640332, 0.024261285917006253, 0.025997951404559436, 0.027307027256974932, 0.028528503225812553, 0.028579120135729344, 0.02783944161045478, 0.026041957436779676, 0.02421818799688479, 0.024092464898199117, 0.024167025431793207, 0.025056280861405995, 0.0255435209591606, 0.025182698499555147]),
            },
            (150, 2): {  # Defaults for Re=150, nDim=2
                'num_inputs': 3,
                'MAX_CONTROL': 0.5,
                'obs_loc': np.array([0.019893317540474145, 0.025958275646187256, 0.029929191240988338, 0.031912383549862124, 0.03387818320172037, 0.0361076258478334, 0.03794255246840573, 0.006112594624572268, 0.008227917308057702, 0.012811242532973385, 0.01679111774155674, 0.02124882328533659, 0.025996167998856744, 0.029681503996560898, 0.003843722165560685, -0.0002516297358352748, 0.001785532288156611, 0.006103969600119739, 0.01187161361175941, 0.017828013358788735, 0.02304346450747632, 0.005542196344942763, -0.0016246277785464578, -0.0017523863636036117, 0.0023379420365569514, 0.007958618037136931, 0.013383142099448991, 0.019133071563505244, 0.005539563380719067, 0.0013383014574116633, 0.0010633879016980748, 0.005169944873388459, 0.010178394774065852, 0.014842232556749605, 0.020245567280977417, 0.004891849585149572, 0.008299530242363466, 0.010225031077332686, 0.01438439814891123, 0.0184304514063345, 0.022579656668224053, 0.02664444231331339, 0.017877656453712813, 0.0235615323029725, 0.026417639905618653, 0.028057309391740583, 0.03056841805175999, 0.03358010788912996, 0.03615926111199853, -0.003304399955795663, 0.0008048232235630725, 0.003308127438480582, 0.005298093135511554, 0.005462163492817247, 0.0055826113069421274, 0.005117760460757581, -0.006702882278183771, -0.0007907344506840618, 0.0014789150024587753, 0.0042170815720490255, 0.004011455095284111, 0.004238137101002448, 0.004182716382611507, -0.005299850209109204, -0.0011629651120355126, -0.0004201362545804911, 0.002485041030141206, 0.0016932325006753718, 0.0022384774608286005, 0.0024984877495396844, -0.0005572660693689844, -0.0004592431729829562, -0.001744798421662561, 0.00043587771485472017, -0.0006985811379856372, 9.473188881274656e-05, 0.00024104303335780727, 0.003481280222974134, -5.993782650326325e-06, -0.0024629463005557185, -0.0014345406093211647, -0.0025229824693174478, -0.0017322490515953109, -0.0018938284055563222, 0.0041796312275183736, -0.0001964716629979486, -0.003273062832854786, -0.0037116941960265233, -0.004123432044051458, -0.0037012581068441414, -0.00386393495096847, 0.0006226666007539492, -0.001626588469587514, -0.004065989917903811, -0.005184509378563793, -0.005383858765602783, -0.005262818963935198, -0.005053353985050952]),
                'obs_scale': np.array([0.018427811622623535, 0.019384215434607877, 0.020299140736638785, 0.02109548734356957, 0.021520693129203856, 0.021315295570998025, 0.021018699008253764, 0.014437492155810777, 0.01607138525913368, 0.018355980958341477, 0.019883560243269354, 0.020626457782410876, 0.02091666093212979, 0.021679288827527118, 0.013459436249927648, 0.012702395953927095, 0.015159909656547262, 0.016334638887575338, 0.01827375286111841, 0.019536197232432932, 0.020776321931968104, 0.0135650588362434, 0.012267888871012902, 0.01442904576762996, 0.017396951759564554, 0.018637108718629093, 0.0193409981388049, 0.019647701328984565, 0.012563708343158172, 0.014143291069727823, 0.017649253991716615, 0.019861282169944896, 0.020202035781608663, 0.019719447848524935, 0.019270771957716558, 0.014523950300931551, 0.017466796605630476, 0.021221994665690965, 0.02162625010191985, 0.021040634960166543, 0.020505939962731642, 0.020126626683663936, 0.01766767291063658, 0.02059884228624054, 0.022431681332607003, 0.022452880927127425, 0.021892041576060502, 0.021287483255963482, 0.020087954279240466, 0.02765053549351991, 0.025282679574119823, 0.025798279403060266, 0.026109413399763894, 0.026296051998762345, 0.026128114954583948, 0.026655725650881503, 0.02226154401210409, 0.022256043574566873, 0.025187900579966713, 0.026913179464206623, 0.027602009038705282, 0.02772291998143119, 0.02815117875694939, 0.016719309637242753, 0.01924398701526746, 0.023715419339379845, 0.026774440719492917, 0.02785700485749122, 0.028343805230712338, 0.028652143384490632, 0.015245812935508252, 0.01784903571299499, 0.022222258801654963, 0.025848286343323822, 0.02691671542356504, 0.027660373822776755, 0.02811321438718294, 0.01627432527800743, 0.01821721854409047, 0.02137645266071297, 0.024594110761687958, 0.02574644349261901, 0.026532607867210345, 0.027060492138358185, 0.021322864750394823, 0.020166656586763986, 0.02165009898715079, 0.023245488618249634, 0.024558226097154558, 0.02526681518388332, 0.025590620243558137, 0.025781586664250098, 0.022745414652474066, 0.022528687996660572, 0.022298090498329946, 0.02321649613499127, 0.023734704932230736, 0.02394010077664837]),
            }
        }
        
        # merge general default values with environment default values
        self.merge_defaults(self.environment_default_values)
        
        # set default values if necessary
        self.set_defaults()
        
        # configure observation and action space
        self.configure_observations()
        self.configure_probe_dimensions()
        self.set_observation_action_spaces()
        
        self.set_default_normalization_factors()
    
    def convert_action(self, action):
        #TODO: assert length of action input in each environment - if necessary
        return action

class JetPinball(PinballBase):
    def __init__(self, env_config):
        super().__init__(env_config)
        self.numJetsInSimulation = self._getProperty(self.runTime_propertyFileData, "lbNoJets")
        
        # JetPinball default values
        self.environment_default_values = {
            (30, 2): {  # Defaults for Re=100, nDim=2
                'num_inputs': None,
                'MAX_CONTROL': None,
                'obs_loc': None,
                'obs_scale': None,
            },
            (75, 2): {  # Defaults for Re=100, nDim=2
                'num_inputs': None,
                'MAX_CONTROL': None,
                'obs_loc': None,
                'obs_scale': None,
            },
            (100, 2): {  # Defaults for Re=100, nDim=2
                'num_inputs': None,
                'MAX_CONTROL': None,
                'obs_loc': None,
                'obs_scale': None,
            },
            (150, 2): {  # Defaults for Re=150, nDim=2
                'num_inputs': None,
                'MAX_CONTROL': None,
                'obs_loc': None,
                'obs_scale': None,
            }
        }
        
        # merge general default values with environment default values
        self.merge_defaults(self.environment_default_values)
        
        # set default values if necessary
        self.set_defaults()
        
        # configure observation and action space
        self.configure_observations()
        self.configure_probe_dimensions()
        self.set_observation_action_spaces()
        
        self.set_default_normalization_factors()
    
    def convert_action(self, action):
        #TODO: assert length of action input in each environment - if necessary
        maia_action_sequence = []
        
        #zero mass flux configuration - first jet must have the same jet strength as second (pointing in same direction)
        # Example [jet0:action[0], jet1:action[0], jet2:action[1], jet3:action[1], ...]
        for jetPair in range(int(self.numJetsInSimulation / 2)):
            #pairwise actuation in this configuration - not individually controlled!
            maia_action_sequence.extend([action[jetPair], -action[jetPair]])    
        
        return maia_action_sequence
                
            